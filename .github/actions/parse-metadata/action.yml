name: "Parse image metadata from Dockerfile path"

inputs:
  dockerfile:
    description: "The path to the Dockerfile"
    required: true
  namespace:
    description: "The namespace for the Docker image"
    required: true
  platform:
    description: "The platform for the Docker image"
    required: false

outputs:
  dir:
    description: "The directory containing the Dockerfile"
    value: ${{ steps.meta.outputs.dir }}
  name:
    description: "The name of the Docker image"
    value: ${{ steps.meta.outputs.name }}
  tag:
    description: "The tag of the Docker image"
    value: ${{ steps.meta.outputs.tag }}
  suffix:
    description: "The tag suffix of the Docker image"
    value: ${{ steps.meta.outputs.suffix }}

runs:
  using: "composite"
  steps:
    - name: Extract image metadata
      id: meta
      run: |
        DOCKERFILE_PATH="${{ inputs.dockerfile }}"
        DOCKERFILE_DIR="$(dirname "$DOCKERFILE_PATH")"
        
        IMAGE_NAME="${DOCKERFILE_PATH#./}"
        IMAGE_NAME="${IMAGE_NAME%/Dockerfile}"
        IMAGE_NAME="${IMAGE_NAME//\//-}"
        IMAGE_NAME="$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')"
        IMAGE_NAME="${{ inputs.namespace }}/${IMAGE_NAME}"
        
        IMAGE_TAG="latest"
        
        case "${{ inputs.platform }}" in
          linux/amd64)
            SUFFIX="-amd64"
            ;;
          linux/arm64)
            SUFFIX="-arm64"
            ;;
          *)
            SUFFIX=""
            ;;
        esac
        
        echo "dir=${DOCKERFILE_DIR}" >> $GITHUB_OUTPUT
        echo "name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
        echo "tag=${IMAGE_TAG}" >> $GITHUB_OUTPUT
        echo "suffix=${SUFFIX}" >> $GITHUB_OUTPUT
      shell: bash -euo pipefail {0}