name: Build and Push Docker Images

on:
  schedule:
    - cron: '0 0 * * 1'
  workflow_dispatch:
  push:
    paths:
      - '**/*'
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    needs: detect-changes
    if: ${{ !eq(needs.detect-changes.outputs.result, '[]') }}
    strategy:
      matrix:
        dockerfile: ${{ fromJson(needs.detect-changes.outputs.result) }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU (for multi-arch builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract Docker image name and tag
        id: meta
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          DOCKERFILE_PATH="${{ matrix.dockerfile }}"
          DOCKERFILE_DIR="$(dirname "$DOCKERFILE_PATH")"
          IMAGE_NAME="${DOCKERFILE_PATH#./}"
          IMAGE_NAME="${IMAGE_NAME%/Dockerfile}"
          IMAGE_NAME="$(echo "$IMAGE_NAME" | tr '[:upper:]' '[:lower:]')"
          IMAGE_NAME="${DOCKERHUB_USERNAME}/${IMAGE_NAME}"
          IMAGE_TAG="latest"
          echo "IMAGE_NAME=${IMAGE_NAME}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV
          echo "DOCKERFILE_PATH=${DOCKERFILE_PATH}" >> $GITHUB_ENV
          echo "DOCKERFILE_DIR=${DOCKERFILE_DIR}" >> $GITHUB_ENV
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          file: ${{ env.DOCKERFILE_PATH }}
          context: ${{ env.DOCKERFILE_DIR }}
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.get-dockerfiles.outputs.result }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  
        with:
          fetch-depth: 0

      - name: Determine changed directories
        id: get-dirs
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          CHANGED_DIRS=$(echo "$CHANGED_FILES" | sed 's|/[^/]*$||' | sort -u)
          echo "Changed directories: $CHANGED_DIRS"
          echo "changed_dirs=$CHANGED_DIRS" >> $GITHUB_ENV

      - name: Determine Dockerfiles to build
        id: get-dockerfiles
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" || "${{ github.event_name }}" = "schedule" ]]; then
            DOCKERFILES=$(find . -type f -name "Dockerfile" || true)
          else
            for DIR in ${{ env.changed_dirs }}; do
              if [[ -f "${DIR}/Dockerfile" ]]; then
                DOCKERFILES+=("${DIR}/Dockerfile")
              fi
            done
          fi

          DOCKERFILES_JSON=$(echo "$DOCKERFILES" | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "Rebuild: $DOCKERFILES_JSON"
          echo "result=$DOCKERFILES_JSON" >> $GITHUB_OUTPUT
